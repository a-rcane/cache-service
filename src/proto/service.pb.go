// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SetReq struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetReq) Reset()         { *m = SetReq{} }
func (m *SetReq) String() string { return proto.CompactTextString(m) }
func (*SetReq) ProtoMessage()    {}
func (*SetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *SetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetReq.Unmarshal(m, b)
}
func (m *SetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetReq.Marshal(b, m, deterministic)
}
func (m *SetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetReq.Merge(m, src)
}
func (m *SetReq) XXX_Size() int {
	return xxx_messageInfo_SetReq.Size(m)
}
func (m *SetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetReq proto.InternalMessageInfo

func (m *SetReq) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SetReq) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type GetReq struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReq) Reset()         { *m = GetReq{} }
func (m *GetReq) String() string { return proto.CompactTextString(m) }
func (*GetReq) ProtoMessage()    {}
func (*GetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *GetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReq.Unmarshal(m, b)
}
func (m *GetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReq.Marshal(b, m, deterministic)
}
func (m *GetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReq.Merge(m, src)
}
func (m *GetReq) XXX_Size() int {
	return xxx_messageInfo_GetReq.Size(m)
}
func (m *GetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetReq proto.InternalMessageInfo

func (m *GetReq) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type SetRes struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetRes) Reset()         { *m = SetRes{} }
func (m *SetRes) String() string { return proto.CompactTextString(m) }
func (*SetRes) ProtoMessage()    {}
func (*SetRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *SetRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRes.Unmarshal(m, b)
}
func (m *SetRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRes.Marshal(b, m, deterministic)
}
func (m *SetRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRes.Merge(m, src)
}
func (m *SetRes) XXX_Size() int {
	return xxx_messageInfo_SetRes.Size(m)
}
func (m *SetRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRes.DiscardUnknown(m)
}

var xxx_messageInfo_SetRes proto.InternalMessageInfo

func (m *SetRes) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type GetRes struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRes) Reset()         { *m = GetRes{} }
func (m *GetRes) String() string { return proto.CompactTextString(m) }
func (*GetRes) ProtoMessage()    {}
func (*GetRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *GetRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRes.Unmarshal(m, b)
}
func (m *GetRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRes.Marshal(b, m, deterministic)
}
func (m *GetRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRes.Merge(m, src)
}
func (m *GetRes) XXX_Size() int {
	return xxx_messageInfo_GetRes.Size(m)
}
func (m *GetRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetRes proto.InternalMessageInfo

func init() {
	proto.RegisterType((*SetReq)(nil), "proto.setReq")
	proto.RegisterType((*GetReq)(nil), "proto.getReq")
	proto.RegisterType((*SetRes)(nil), "proto.setRes")
	proto.RegisterType((*GetRes)(nil), "proto.getRes")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 152 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x06, 0x5c,
	0x6c, 0xc5, 0xa9, 0x25, 0x41, 0xa9, 0x85, 0x42, 0x02, 0x5c, 0xcc, 0xd9, 0xa9, 0x95, 0x12, 0x8c,
	0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x20, 0xa6, 0x90, 0x08, 0x17, 0x6b, 0x59, 0x62, 0x4e, 0x69, 0xaa,
	0x04, 0x93, 0x02, 0xa3, 0x06, 0x4f, 0x10, 0x84, 0xa3, 0x24, 0xc5, 0xc5, 0x96, 0x8e, 0x43, 0x87,
	0x92, 0x1c, 0xd4, 0xb4, 0x62, 0x84, 0x5e, 0x46, 0x64, 0xbd, 0x1c, 0x50, 0xbd, 0xc5, 0x46, 0xe1,
	0x5c, 0xdc, 0xb9, 0x89, 0xd9, 0xa9, 0xc1, 0x10, 0x37, 0x09, 0x29, 0x73, 0x31, 0x07, 0xa7, 0x96,
	0x08, 0xf1, 0x42, 0x1c, 0xa7, 0x07, 0x71, 0x92, 0x14, 0x0a, 0xb7, 0x18, 0xa4, 0xc8, 0x1d, 0x49,
	0x51, 0x3a, 0xaa, 0x22, 0x88, 0xc1, 0x49, 0x6c, 0x60, 0x9e, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff,
	0x9c, 0x7a, 0x6e, 0xab, 0xef, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MakeServiceClient is the client API for MakeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MakeServiceClient interface {
	Set(ctx context.Context, in *SetReq, opts ...grpc.CallOption) (*SetRes, error)
	Get(ctx context.Context, in *GetReq, opts ...grpc.CallOption) (*GetRes, error)
}

type makeServiceClient struct {
	cc *grpc.ClientConn
}

func NewMakeServiceClient(cc *grpc.ClientConn) MakeServiceClient {
	return &makeServiceClient{cc}
}

func (c *makeServiceClient) Set(ctx context.Context, in *SetReq, opts ...grpc.CallOption) (*SetRes, error) {
	out := new(SetRes)
	err := c.cc.Invoke(ctx, "/proto.makeService/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *makeServiceClient) Get(ctx context.Context, in *GetReq, opts ...grpc.CallOption) (*GetRes, error) {
	out := new(GetRes)
	err := c.cc.Invoke(ctx, "/proto.makeService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MakeServiceServer is the server API for MakeService service.
type MakeServiceServer interface {
	Set(context.Context, *SetReq) (*SetRes, error)
	Get(context.Context, *GetReq) (*GetRes, error)
}

// UnimplementedMakeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMakeServiceServer struct {
}

func (*UnimplementedMakeServiceServer) Set(ctx context.Context, req *SetReq) (*SetRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Set not implemented")
}
func (*UnimplementedMakeServiceServer) Get(ctx context.Context, req *GetReq) (*GetRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterMakeServiceServer(s *grpc.Server, srv MakeServiceServer) {
	s.RegisterService(&_MakeService_serviceDesc, srv)
}

func _MakeService_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MakeServiceServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.makeService/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MakeServiceServer).Set(ctx, req.(*SetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _MakeService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MakeServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.makeService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MakeServiceServer).Get(ctx, req.(*GetReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _MakeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.makeService",
	HandlerType: (*MakeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Set",
			Handler:    _MakeService_Set_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _MakeService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
